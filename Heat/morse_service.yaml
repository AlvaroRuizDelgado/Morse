heat_template_version: 2015-04-30
description: Create a webservice from the ground up.

parameters:
  # WEBSERVER NODES PARAMETERS
  webserver_name:
    type: string
    description: group name for webservers
    default: "morse"
  webserver_node_count:
    type: number
    description: number of webserver nodes
    default: 3
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    default: mykey
  webserver_image:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: Ubuntu14.04_LTS
  webserver_flavor:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: m1.tiny
    constraints:
      - allowed_values: [ m1.tiny, m1.small, m1.medium ]
        description: Value must be one of m1.tiny, m1.small or m1.medium.

  # NETWORK PARAMETERS
  public_network:
    type: string
    description: public network name to connect to router
    default: public
  app_net_name:
    type: string
    description: network name
    default: net-morse
  app_net_gateway_ip:
    type: string
    description: IP address used to connect to router
    default: 192.168.0.254
  app_net_start:
    type: string
    description: allocation starts from this ip
    default: 192.168.0.101
  app_net_end:
    type: string
    description: allocation ends with this ip
    default: 192.168.0.200
  app_net_cidr:
    type: string
    description: allocation cidr for net1
    default: 192.168.0.0/24


resources:
  app_network:
    type: lib/create_network.yaml
    properties:
      network_name: {get_param: app_net_name}
      public_network: { get_param: public_network }
      gateway_ip: { get_param: app_net_gateway_ip }
      allocation_start: { get_param: app_net_start }
      allocation_end: { get_param: app_net_end }
      cidr: { get_param: app_net_cidr }

  app_security_group:
    type: lib/create_security_group.yaml

  webservers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: webserver_node_count }
      # DEFINITION OF EACH INDIVIDUAL NODE
      resource_def:
          type: lib/create_node_IP.yaml
          properties:
            name:
              str_replace:
                template: name%-%index%
                params:
                  "name%": { get_param: webserver_name }
            public_network: { get_param : public_network }
            node_image: { get_param: webserver_image }
            flavor: { get_param: webserver_flavor }
            key_name: { get_param: key_name }
            node_network: { get_attr: [app_network, app_network_ID] }
            node_subnet_id: { get_attr: [app_network, app_subnet_ID] }
            group_name: { get_param: webserver_name }
            node_security_group: { get_attr: [app_security_group, app_security_group_ID] }
            node_userdata: { get_file: initial_config.sh }
            # pool: { get_resource: pool }
            # app_port: { get_param: app_port}

outputs:
  network_id:
    description: ID of the application's network
    value: { get_attr: [ app_network, app_network_ID ] }
  web_networks:
    description: Networks of webserver
    value: { get_attr: [ webservers, "networks" ] }
  private_ip:
    description: The private IP address of the deployed instance
    value: { get_attr: [ webservers, "node_private_IP" ] }
  public_ip:
    description: Public IP address of the deployed instance
    value: { get_attr: [ webservers, "node_floating_IP" ] }
